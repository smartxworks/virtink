---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: lockspaces.virt.virtink.smartx.com
spec:
  group: virt.virtink.smartx.com
  names:
    kind: Lockspace
    listKind: LockspaceList
    plural: lockspaces
    singular: lockspace
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.storageClassName
      name: StorageClass
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              ioTimeoutSeconds:
                default: 10
                format: int32
                maximum: 15
                minimum: 5
                type: integer
              maxLocks:
                default: 1000
                description: The maximum number of Lock that can be held in a Lockspace.
                maximum: 16384
                minimum: 1
                type: integer
              storageClassName:
                type: string
              volumeMode:
                default: Filesystem
                description: PersistentVolumeMode describes how a volume is intended
                  to be consumed, either Block or Filesystem.
                type: string
            required:
            - storageClassName
            type: object
          status:
            properties:
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
